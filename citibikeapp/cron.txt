# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
#=================================================================
#      SYSTEM ACTIVITY REPORTS
#=================================================================
#0,15,30,45 * * * * python /home/ubuntu/flaskapp/create_station_db.py

#increase the deadline-violating jobs' priority every minute
#* * * * * python /home/ubuntu/citibikeapp/citibikeapp/updatepriority.py

#run algorithm and update database during the day
#run every 2 minutes from 6:00 to 22:59
#*/2 6-22 * * * python /home/ubuntu/citibikeapp/citibikeapp/greedyalgo.py

#run algorithm and update database overnight, look ahead 120min, also run for 30min
#run everyday at 23:00
#0 23 * * * python /home/ubuntu/citibikeapp/citibikeapp/greedyalgo.py -n 120 1800

#run algorithm and update database overnight, look ahead 300min, also run for 30min
#run everyday at 00:30
#30 0 * * * python /home/ubuntu/citibikeapp/citibikeapp/greedyalgo.py -n 300 1800